apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "communication-busybox-5.fullname" . }}
  labels:
    {{- include "communication-busybox-5.labels" . | nindent 4 }}
  annotations:
    proxy.istio.io/config: |
      proxyMetadata:
        ISTIO_META_TLS_CLIENT_CERT_CHAIN: /etc/certs/tls.crt
        ISTIO_META_TLS_CLIENT_KEY: /etc/certs/tls.key
        ISTIO_META_TLS_CLIENT_ROOT_CERT: /etc/certs/ca/ca.crt
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "communication-busybox-5.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- include "communication-busybox-5.annotations" . | nindent 8 }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "communication-busybox-5.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "communication-busybox-5.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: SERVICE_ID
              value: {{ .Chart.Name | quote }}
            - name: KAFKA_BROKER
              value: "{{ .Values.kafka.broker.host }}:{{ .Values.kafka.broker.port}}"
            - name: KAFKA_GROUP_ID
              value: "{{ .Values.kafka.consumer.groupId }}"
            {{- $consumeKafkaTopicsKey := include "communication-busybox-5.getKafkaTopicsToConsumeStruct" . | fromYaml }}
            - name: CONSUME_KAFKA_TOPIC
              value:  {{ include "communication-busybox-5.extractKafkaTopics" $consumeKafkaTopicsKey | quote }}
            {{- $produceKafkaTopicsKey := include "communication-busybox-5.getKafkaTopicsToProduceStruct" . | fromYaml }}
            - name: PRODUCE_KAFKA_TOPIC
              value: {{ include "communication-busybox-5.extractKafkaTopics" $produceKafkaTopicsKey | quote }}
            {{- $hostsKey := include "communication-busybox-5.getHostsStruct" . | fromYaml }}
            - name: HOSTS
              value: {{ include "communication-busybox-5.extractServiceHosts" $hostsKey | quote }}
            - name: JAEGER_HOST
              value: {{ include "communication-busybox-5.getJaegerHost" . | quote }}
            - name: JAEGER_PORT
              value: {{ include "communication-busybox-5.getJaegerPort" . | quote }}
            - name: ENABLE_DYNAMIC_COMMUNICATION
              value: {{ .Values.enableDynamicCommunication | quote }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
{{/*          livenessProbe:*/}}
{{/*            {{- toYaml .Values.livenessProbe | nindent 12 }}*/}}
{{/*          readinessProbe:*/}}
{{/*            {{- toYaml .Values.readinessProbe | nindent 12 }}*/}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}